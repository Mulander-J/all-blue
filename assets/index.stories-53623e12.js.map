{"version":3,"file":"index.stories-53623e12.js","sources":["../../node_modules/svelte/src/runtime/internal/each.js","../../src/stories/@scrollbar/GradientBar/GradientBar.svelte"],"sourcesContent":["import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","<script>\n  import { RandomText } from '../../../constant'\n  import \"./index.scss\";\n  /**\n   * @type {boolean} Is Horizontal\n   */\n  export let isHorizontal = false;\n  /**\n   * @type {boolean} Direction Reverse\n   */\n  export let isReverse = false;\n\n  /**\n   * @type {number} Repeat count\n   */\n  export let repeat = 10;\n\n  /**\n   * @type {string} Text Content\n   */\n  export let content = RandomText;\n\n  let percent = 0;\n\n  const handleCroll = (event) => {\n    let { scrollTop, scrollHeight, clientHeight } = event.target;\n    percent = (100 * scrollTop) / (scrollHeight - clientHeight);\n  };\n\n  $: paragraphs = new Array(repeat || 1);\n  $: dirCls = isHorizontal? (isReverse ? 'top' : 'bottom') : (isReverse ? 'left' : 'right')\n  $: scrollStyle = isHorizontal ? `width:${percent}%` : `height:${percent}%`;\n</script>\n\n<div class=\"relative\">\n  <div id=\"scrollTrack\" class={`scroll__${dirCls}`}>\n    <div class=\"bar\" style={scrollStyle} />\n  </div>\n  <section class=\"content\" on:scroll={handleCroll}>\n    {#each paragraphs as n}\n      <p key={n}>{content}</p>\n    {/each}\n  </section>\n</div>\n"],"names":["ensure_array_like","array_like_or_iterator","ctx","insert","target","p","anchor","i","div2","append","div1","div0","section","isHorizontal","$$props","isReverse","repeat","content","RandomText","percent","handleCroll","event","scrollTop","scrollHeight","clientHeight","$$invalidate","paragraphs","dirCls","scrollStyle"],"mappings":"2KAKO,SAASA,EAAkBC,EAAwB,CACzD,OAAOA,GAAA,YAAAA,EAAwB,UAAW,OACvCA,EACA,MAAM,KAAKA,CAAsB,CACrC,wGC+BkBC,EAAO,CAAA,CAAA,cAAXA,EAAC,CAAA,CAAA,UAATC,EAAwBC,EAAAC,EAAAC,CAAA,0BAAZJ,EAAO,CAAA,CAAA,cAAXA,EAAC,CAAA,uEADJA,EAAU,CAAA,CAAA,uBAAf,OAAIK,GAAA,wJAHkBL,EAAW,CAAA,CAAA,mDADGA,EAAM,CAAA,CAAA,EAAA,yDADhDC,EASMC,EAAAI,EAAAF,CAAA,EARJG,EAEMD,EAAAE,CAAA,EADJD,EAAuCC,EAAAC,CAAA,SAEzCF,EAIUD,EAAAI,CAAA,sEAJ0BV,EAAW,CAAA,CAAA,sCAFrBA,EAAW,CAAA,CAAA,yBADGA,EAAM,CAAA,CAAA,6BAIrCA,EAAU,CAAA,CAAA,oBAAf,OAAI,GAAA,EAAA,iHAAJ,4EAjCO,CAAA,aAAAW,EAAe,EAAK,EAAAC,EAIpB,CAAA,UAAAC,EAAY,EAAK,EAAAD,EAKjB,CAAA,OAAAE,EAAS,EAAE,EAAAF,EAKX,CAAA,QAAAG,EAAUC,CAAU,EAAAJ,EAE3BK,EAAU,EAER,MAAAC,EAAeC,GAAK,CAClB,GAAA,CAAA,UAAAC,EAAW,aAAAC,EAAc,aAAAC,CAAY,EAAKH,EAAM,OACtDI,EAAA,EAAAN,EAAW,IAAMG,GAAcC,EAAeC,EAAY,wMAGzDE,EAAU,IAAO,MAAMV,GAAU,CAAC,CAAA,iBACpCS,EAAA,EAAEE,EAASd,EAAeE,EAAY,MAAQ,SAAaA,EAAY,OAAS,OAAO,kBACvFU,EAAA,EAAEG,EAAcf,WAAwBM,CAAO,cAAgBA,CAAO,GAAA;;;;;;","x_google_ignoreList":[0]}